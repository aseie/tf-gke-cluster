name: 'gke-infra-deploy'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_project_id: "${{ secrets.GCP_PROJECT_ID}}"
  TF_VAR_region: "europe-west3"
  TF_VAR_owner: "Adriano Seie"
  TF_VAR_environment: "dev"

jobs:

  gke-infra-build:
    name: 'gcp-infra-build'
    runs-on: ubuntu-latest
    environment: dev
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: "gcp-auth"
        uses: aseie/actions-templates/gcp-auth@main
        with:
          token_format: 'access_token'
          access_token_lifetime: 300s
          create_credentials_file: true
          GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          GCP_IDENTITY_PROVIDER_POOL: ${{ secrets.GCP_IDENTITY_PROVIDER_POOL }}
          GCP_IDENTITY_PROVIDER: ${{ secrets.GCP_IDENTITY_PROVIDER }}
    
      # Install the latest version of Terraform CLI
      - name: "terraform-prep"
        uses: aseie/actions-templates/terraform@main

      # Generates an execution plan for Terraform
      - name: tf-plan
        run: make plan

      - name: Upload tf-plan
        uses: actions/upload-artifact@v3
        with:
          name: 'terraform-plan'
          path: '${{ github.workspace }}/plan.tfplan'
      
  gke-infra-deploy:
    name: 'gcp-infra-deploy'
    runs-on: ubuntu-latest
    if: github.event.inputs.job-name == github.job
    needs:
      - gke-infra-build
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: "gcp-auth"
        uses: aseie/actions-templates/gcp-auth@main
        with:
          token_format: 'access_token'
          access_token_lifetime: 900s
          create_credentials_file: true
          GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          GCP_IDENTITY_PROVIDER_POOL: ${{ secrets.GCP_IDENTITY_PROVIDER_POOL }}
          GCP_IDENTITY_PROVIDER: ${{ secrets.GCP_IDENTITY_PROVIDER }}

      # Install the latest version of Terraform CLI
      - name: "terraform-prep"
        uses: aseie/actions-templates/terraform@main

      - name: Download a tf-plan
        uses: actions/download-artifact@v3
        with:
          name: 'terraform-plan'

      - name: tf-deploy
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.inputs.job-name == github.job
        run: make deploy
      
# SLACK configuration
# https://api.slack.com/apps
# Create a New App ➜ App Name and Choose Slack Workspace ➜ Incoming Webhooks — Toggle Activate Incoming Webhooks ➜ Add New Webhook to Workspace ➜ Select Slack Channel.

  slack_channel_notification:
    name: 'Slack Notification'
    runs-on: ubuntu-latest
    needs:
      # - gke-infra-build
      - gke-infra-deploy
      # - gke-infra-destroy
    if: always()

    steps:
      - name: "tf-deploy notify on slack"
        uses: aseie/actions-templates/slack@main
        with:
          SLACK_CHANNEL: OG-github-actions
          SLACK_COLOR: ${{ needs.gke-infra-deploy.result }}
          SLACK_TITLE: ${{ github.repository }}
          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: 'Terraform Github Actions Main Branch Alert'
    